{{- if .Values.mysql_admin.enabled -}}
{{- $ns := .Values.namespace.name -}}
{{- $app := .Values.mysql_admin -}}

kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  name: {{ $app.name }}-ingress
  namespace: {{ $ns }}
  labels:
{{ toYaml $app.labels | indent 4 }}
  {{- with $app.ingress.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
  {{- end }}
spec:
  rules:
    - host: {{ $app.url }}
      http:
        paths:
          - path: /
            backend:
              serviceName: {{ $app.name }}-service
              servicePort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $app.name }}-service
  namespace: {{ $ns }}
  labels:
{{ toYaml $app.labels | indent 4 }}
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    tier: app-ui
    app: {{ $app.name }}
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $app.name }}-deployment
  namespace: {{ $ns }}
  labels:
    tier: app-ui
{{ toYaml $app.labels | indent 4 }}
spec:
  replicas: {{ $app.replicaCount }}
  selector:
    matchLabels:
      tier: app-ui
{{ toYaml $app.labels | indent 6 }}
  template:
    metadata:
      labels:
        tier: app-ui
{{ toYaml $app.labels | indent 8 }}
    spec:
      # this prevents the pod from starting on nodes
      # with the same service for HA
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: tier
                    operator: In
                    values:
                      - app-ui
                  - key: app
                    operator: In
                    values:
                      - mysql-admin
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: phpmyadmin
          image: {{ $app.image }}
          ports:
            - name: http
              containerPort: 80
          env:
            - name: PMA_HOST
              value: mysql-rw
          resources:
            requests:
              memory: "256M"
              cpu: "1"
            limits:
              memory: "512M"
              cpu: "2"
{{- end }}